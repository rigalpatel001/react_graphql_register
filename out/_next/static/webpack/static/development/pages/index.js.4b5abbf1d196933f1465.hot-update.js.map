{"version":3,"file":"static/webpack/static/development/pages/index.js.4b5abbf1d196933f1465.hot-update.js","sources":["webpack:///./components/ProjectList.js"],"sourcesContent":["import { Query } from 'react-apollo';\nimport { Mutation } from \"react-apollo\";\nimport gql from 'graphql-tag';\nimport ErrorMessage from './ErrorMessage';\nimport React from 'react';\nimport { Link } from \"./Router\";\nimport Router from \"next/router\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n  icon: {\n    margin: theme.spacing.unit,\n    fontSize: 20,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  \n});\n\nconst PROJECT_OPERATIONS = gql`\n  mutation project_operations($id: String, $deleted: String) {\n    project_operations(id: $id, deleted: $deleted) {\n      deleted\n    }\n  }\n`;\n\nexport const allProjectsQuery = gql`\n  query projectlist($limit: String!, $offset: String!) {\n    projectlist(limit: $limit, offset: $offset) {\n      id\n      name\n    }\n  }\n`\nexport const allProjectsQueryVars = {\n  offset: 0,\n  limit: 10,\n  //order: \"date_entered desc\"\n}\n\n function ProjectList (props) {\n  const { classes } = props;\n  return (\n    <Query query={allProjectsQuery} variables={allProjectsQueryVars}>\n      {({ loading, error, data: { projectlist }, fetchMore }) => {\n        if (error) return <ErrorMessage message='Error loading posts.' />\n        if (loading) return <div>Loading</div>\n\n       // const areMorePosts = projectlist.length < _allPostsMeta.count\n        return (\n          <Paper className={classes.root}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <CustomTableCell>Title</CustomTableCell>\n                <CustomTableCell align=\"right\">Edit</CustomTableCell>\n                <CustomTableCell align=\"right\">Delete</CustomTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n            {projectlist.map((project, index) => (\n                <TableRow className={classes.project} key={project.id}>\n                  <CustomTableCell component=\"th\" scope=\"row\">\n                    {project.name}\n                  </CustomTableCell>\n                  <CustomTableCell align=\"right\">\n                  <Link\n                      to={`/project?id=${project.id}`}\n                      as={`/project?id=${project.id}`}\n\t\t\t\t\t\t      > <EditIcon className={classes.icon} />\n\t\t\t\t\t     \t</Link>\n                 </CustomTableCell>\n                  <CustomTableCell align=\"right\"> \n                  <Mutation mutation={PROJECT_OPERATIONS} key={project.id}>\n                      {project_operations => (\n                        <div>\n                          <form\n                            onSubmit={e => {\n                              e.preventDefault();\n                              project_operations({\n                                variables: { id: project.id, deleted: 1 },\n                                refetchQueries: [`projectlist`]\n                              });\n                            }}\n                          >\n                            <Button type=\"submit\"><DeleteIcon className={classes.icon} /></Button>\n                           \n                          </form>\n                        </div>\n                      )}\n                    </Mutation>\n                  </CustomTableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>  \n              <Button  variant=\"contained\" color=\"primary\" className={classes.button} onClick={() => loadMorePosts(projectlist, fetchMore)}>\n              {' '}\n              {loading ? 'Loading...' : 'Show More'}{' '}>\n          \n        </Button>\n        </Paper>\n        \n        )\n      }}\n    </Query>\n  )\n}\n\nfunction loadMorePosts (projectlist, fetchMore) {\n  fetchMore({\n    variables: {\n      offset: projectlist.length\n    },\n    updateQuery: (previousResult, { fetchMoreResult }) => {\n      if (!fetchMoreResult) {\n        return previousResult\n      }\n      return Object.assign({}, previousResult, {\n        // Append the new posts results to the old one\n        projectlist: [...previousResult.projectlist, ...fetchMoreResult.projectlist]\n      })\n    }\n  })\n}\n\nProjectList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ProjectList);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AAAA;AACA;AASA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAlBA;AAAA;AACA;AAudA;AAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAZA;AAcA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}