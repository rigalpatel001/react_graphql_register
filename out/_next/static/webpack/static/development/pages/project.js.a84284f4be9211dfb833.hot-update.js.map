{"version":3,"file":"static/webpack/static/development/pages/project.js.a84284f4be9211dfb833.hot-update.js","sources":["webpack:///./components/Projectform.js"],"sourcesContent":["import { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport React from \"react\";\nimport Router from \"next/router\";\nimport Joi from \"joi-browser\";\n\n\n\nconst CREATE_PROJECT = gql`\n  mutation project_operations(\n    $name: String\n    $description: String\n  ) {\n    project_operations(name: $name, description: $description) {\n      name\n      description\n    }\n  }\n`;\n\nconst schema = {\n  name: Joi.string()\n    .required()\n    .error(errors => {\n      return {\n        message: \"Name is required!\"\n      };\n    }),\n    description: Joi.string()\n    .required()\n    .error(errors => {\n      return {\n        message: \"Description is required!\"\n      };\n    })\n};\n\nclass Projectform extends React.Component {\n  \n  state = {\n    id: \"\",\n    name: \"\",\n    description: \"\",\n    errors: \"\"\n};\n  constructor(props) {\n        super(props);\n        if (props.project) {\n          console.log(\"Found\");\n            this.state = {\n            id: props.project.id,\n            name: props.project.name,\n            description: props.project.description\n        };\n    }  \n    console.log(this.state);\n  }\n\n  handleChange = event => {\n   \n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  validate(name, description) {\n    let errors = \"\";\n    const result = Joi.validate(\n      {\n        name: name,\n        description: description\n      },\n      schema\n    );\n    if (result.error) {\n      errors = result.error.details[0].message;\n    }\n    return errors;\n  }\n\n  render() {\n    let input;\n    const { errors } = this.state;\n    console.log( this.state);\n    return (\n            <Mutation mutation={CREATE_PROJECT}>\n              {(project_operations, { loading, error }) => (\n                <div>\n                  <form\n                    onSubmit={e => {\n                      e.preventDefault();\n                      const errors = this.validate(\n                        e.target.name.value,\n                        e.target.description.value\n                      );\n                      if (errors) {\n                        this.setState({ errors });\n                        return;\n       \n                     }\n                    if (!errors) {\n                     project_operations({\n                          variables: {\n                            id:  e.target.id.value,\n                            name: e.target.name.value,\n                            description: e.target.description.value,\n                          }\n                        }).then(() => Router.push(\"/\"));\n                      }\n                    }}\n                  >\n                    {errors && <p>{errors}</p>}\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      placeholder=\"Project Name\"\n                      value={this.state.name}\n                      onChange={this.handleChange}\n                    />\n                    <input\n                      name=\"description\"\n                      id=\"description\"\n                      value={this.state.description}\n                      placeholder=\"Description\"\n                      onChange={this.handleChange}\n                    />\n                     <input type=\"hidden\" name=\"id\" id=\"id\" value={this.state.id} />\n                    <button type=\"submit\">Add Account</button>\n                    <style jsx>{`\n                      form {\n                        border-bottom: 1px solid #ececec;\n                        padding-bottom: 20px;\n                        margin-bottom: 20px;\n                      }\n                      h1 {\n                        font-size: 20px;\n                      }\n                      input {\n                        display: block;\n                        margin-bottom: 10px;\n                      }\n                      form button {\n                        margin-right: 10px;\n                      }\n                    `}</style>\n                  </form>\n                  {loading && <p>Loading...</p>}\n                  {error && <p>Error :( Please try again</p>}\n                </div>\n              )}\n            </Mutation>\n          );\n  }\n}\n\nexport default Projectform;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAIA;AAYA;AACA;AAGA;AACA;AADA;AAGA;AACA;AAGA;AACA;AADA;AAGA;AAdA;AACA;AAgBA;;;;;AAQA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AALA;AACA;AACA;AACA;AAJA;AACA;AAKA;AAaA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAhBA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAVA;AAWA;AACA;;;AAOA;AACA;AACA;AAEA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AADA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AAAA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxCA;AAAA;AAAA;AA2DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9DA;AAmEA;;;;AAnHA;AACA;AAqHA;;;;A","sourceRoot":""}